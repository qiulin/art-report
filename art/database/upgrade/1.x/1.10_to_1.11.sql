-- Migration script from Art 1.10 to Art 1.11
--
-- Purpose: create/update the tables needed to 
--          . integrate with quartz 
--          . share jobs
--          . store user groups and privileges
--          . support drill down queries
--
-- this script should work as it is for oracle
-- for sql server, replace the TIMESTAMP and DATE data types with DATETIME
--
-- to complete the migration, run quartz table creation script also!
-- ------------------------------------------------

-- changes to art_jobs_audit
ALTER TABLE ART_JOBS_AUDIT ADD JOB_AUDIT_KEY VARCHAR(100);    
ALTER TABLE ART_JOBS_AUDIT ADD START_DATE TIMESTAMP NULL;
ALTER TABLE ART_JOBS_AUDIT ADD END_DATE TIMESTAMP NULL;
ALTER TABLE ART_JOBS_AUDIT ADD USERNAME VARCHAR(15);

-- changes to art_jobs
ALTER TABLE ART_JOBS ADD NEXT_RUN_DATE TIMESTAMP NULL;
ALTER TABLE ART_JOBS ADD START_DATE DATE;
ALTER TABLE ART_JOBS ADD END_DATE DATE;
ALTER TABLE ART_JOBS ADD MIGRATED_TO_QUARTZ VARCHAR(1);
ALTER TABLE ART_JOBS ADD ALLOW_SHARING VARCHAR(1);
ALTER TABLE ART_JOBS ADD ALLOW_SPLITTING VARCHAR(1);
ALTER TABLE ART_JOBS ADD CACHED_TABLE_NAME VARCHAR(30);

-- The below statements modify the MIN,HOUR,... columns
-- from INTEGER to VARCHAR in order to store quartz style values and ranges
ALTER TABLE ART_JOBS RENAME COLUMN MINUTE TO MINUTE_OLD;
ALTER TABLE ART_JOBS RENAME COLUMN HOUR TO HOUR_OLD;
ALTER TABLE ART_JOBS RENAME COLUMN DAY TO DAY_OLD;
ALTER TABLE ART_JOBS RENAME COLUMN WEEKDAY TO WEEKDAY_OLD;
ALTER TABLE ART_JOBS RENAME COLUMN MONTH TO MONTH_OLD;
ALTER TABLE ART_JOBS  ADD (MINUTE VARCHAR(100));
ALTER TABLE ART_JOBS  ADD (HOUR VARCHAR(100));
ALTER TABLE ART_JOBS  ADD (DAY VARCHAR(100));
ALTER TABLE ART_JOBS  ADD (WEEKDAY VARCHAR(100));
ALTER TABLE ART_JOBS  ADD (MONTH VARCHAR(100));
UPDATE ART_JOBS  SET MINUTE = MINUTE_OLD
 ,  HOUR = HOUR_OLD, DAY = DAY_OLD
 ,  WEEKDAY = WEEKDAY_OLD, MONTH = MONTH_OLD;
ALTER TABLE ART_JOBS DROP COLUMN  MINUTE_OLD;
ALTER TABLE ART_JOBS DROP COLUMN  HOUR_OLD;
ALTER TABLE ART_JOBS DROP COLUMN  DAY_OLD;
ALTER TABLE ART_JOBS DROP COLUMN  WEEKDAY_OLD;
ALTER TABLE ART_JOBS DROP COLUMN  MONTH_OLD;

-- The above statements can be replace by the following short version in mysql
--  for postgresql, replace the MODIFY keyword with ALTER COLUMN <column name> TYPE <data type>
--  for hsqldb, sql server, replace the MODIFY keyword with ALTER COLUMN <column name> <data type>
-- ALTER TABLE ART_JOBS MODIFY MINUTE VARCHAR(100);
-- ALTER TABLE ART_JOBS MODIFY HOUR VARCHAR(100);
-- ALTER TABLE ART_JOBS MODIFY DAY VARCHAR(100);
-- ALTER TABLE ART_JOBS MODIFY WEEKDAY VARCHAR(100);
-- ALTER TABLE ART_JOBS MODIFY MONTH VARCHAR(100);

-- ------------------------

-- Update to quartz style:
UPDATE ART_JOBS SET MINUTE='*' WHERE MINUTE='-1';
UPDATE ART_JOBS SET HOUR='*' WHERE HOUR='-1';
UPDATE ART_JOBS SET DAY='*' WHERE DAY='-1';
UPDATE ART_JOBS SET WEEKDAY='?' WHERE WEEKDAY='-1';
UPDATE ART_JOBS SET MONTH='*' WHERE MONTH='-1';

-- update column to enable migration of jobs to quartz
UPDATE ART_JOBS SET MIGRATED_TO_QUARTZ='N' WHERE MIGRATED_TO_QUARTZ IS NULL;

-- new shared jobs table
CREATE TABLE ART_SHARED_JOBS
(
	JOB_ID INTEGER NOT NULL,
	USERNAME VARCHAR(15) NOT NULL,
	LAST_FILE_NAME VARCHAR(4000),
	LAST_START_DATE TIMESTAMP NULL,
	LAST_END_DATE TIMESTAMP NULL,
	PRIMARY KEY (JOB_ID,USERNAME)
);

-- new job schedules table
CREATE TABLE ART_JOB_SCHEDULES
(
	SCHEDULE_NAME VARCHAR(50) NOT NULL,
	MINUTE	    VARCHAR(100),               
	HOUR		    VARCHAR(100),               
	DAY		    VARCHAR(100), 
	MONTH		    VARCHAR(100),   	
	WEEKDAY	    VARCHAR(100),              	
	PRIMARY KEY (SCHEDULE_NAME)
);

-- new user groups table
CREATE TABLE ART_USER_GROUPS
(
	USER_GROUP_ID INTEGER NOT NULL,
	NAME VARCHAR(30) NOT NULL UNIQUE,
	DESCRIPTION VARCHAR(50),
	PRIMARY KEY (USER_GROUP_ID)
);

-- new user group assignment table
CREATE TABLE ART_USER_GROUP_ASSIGNMENT
(
	USERNAME VARCHAR(15) NOT NULL,
	USER_GROUP_ID INTEGER NOT NULL,
	PRIMARY KEY (USERNAME,USER_GROUP_ID)
);

-- new table for queries that can be accessed by user groups
CREATE TABLE ART_USER_GROUP_QUERIES
(
	USER_GROUP_ID INTEGER NOT NULL,
	QUERY_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_GROUP_ID,QUERY_ID)
);

-- new table for query groups that can be accessed by user groups
CREATE TABLE ART_USER_GROUP_GROUPS
(
	USER_GROUP_ID INTEGER NOT NULL,
	QUERY_GROUP_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_GROUP_ID,QUERY_GROUP_ID)
);

-- new table for jobs that can be accessed by user groups
CREATE TABLE ART_USER_GROUP_JOBS
(
	USER_GROUP_ID INTEGER NOT NULL,
	JOB_ID INTEGER NOT NULL,
	PRIMARY KEY (USER_GROUP_ID,JOB_ID)
);

-- new drilldown queries table
CREATE TABLE ART_DRILLDOWN_QUERIES
(
	QUERY_ID INTEGER NOT NULL,
	DRILLDOWN_QUERY_ID INTEGER NOT NULL,
	DRILLDOWN_QUERY_POSITION INTEGER NOT NULL,
	DRILLDOWN_TITLE VARCHAR(30),
	DRILLDOWN_TEXT VARCHAR(30),
	OUTPUT_FORMAT VARCHAR(15),
	PRIMARY KEY (QUERY_ID,DRILLDOWN_QUERY_POSITION)
);

-- change to ART_QUERY_FIELDS to support drill down queries
ALTER TABLE ART_QUERY_FIELDS ADD DRILLDOWN_COLUMN INTEGER;

-- enlarge text_info column
ALTER TABLE ART_ALL_SOURCES MODIFY TEXT_INFO VARCHAR(4000);

-- add sample job schedule
INSERT INTO ART_JOB_SCHEDULES (SCHEDULE_NAME, MINUTE, HOUR, DAY, MONTH, WEEKDAY) VALUES
('Last Day of Every Month','0','23','L','*','?');

